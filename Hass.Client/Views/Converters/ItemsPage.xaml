<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Hass.Client.Views.ItemsPage"
             xmlns:controls="clr-namespace:Hass.Client.Views.Controls"
             xmlns:converters="clr-namespace:Hass.Client.Views.Converters"
             xmlns:components="clr-namespace:Hass.Client.Models.Components"
             Title="{Binding Title}"
             x:Name="BrowseItemsPage">
    
    <ContentPage.Resources>
        <Style x:Key="BaseTextStyle" TargetType="Label">
            <Setter Property="FontSize" Value="10" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalTextAlignment" Value="Center" />
            <Setter Property="VerticalTextAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Tahoma" />
        </Style>
        
        <Style x:Key="SvgIconStyle" TargetType="{x:Type controls:SvgIcon}">
            <Setter Property="WidthRequest" Value="40" />
            <Setter Property="HeightRequest" Value="40" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="Margin" Value="2,-4,0,0" />
        </Style>

        <Style x:Key="BadgeFrameStyle" TargetType="{x:Type Frame}">
            <Setter Property="BorderColor" Value="Red" />
            <Setter Property="BackgroundColor" Value="REd" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="MinimumWidthRequest" Value="10" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="Margin" Value="0,0,0,-5" />
            <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
            <Setter Property="VerticalOptions" Value="End" />
        </Style>

        <Style x:Key="BadgeLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseTextStyle}">
            <Setter Property="TextColor" Value="White" />
            <Setter Property="FontAttributes" Value="Bold" />
        </Style>

        <Style x:Key="StateLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseTextStyle}">
        </Style>

        <Style x:Key="FriendlyNameLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseTextStyle}">
        </Style>

        <DataTemplate x:Key="AlarmControlPanelTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="7*" />
                    <RowDefinition Height="3*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <controls:Circle StrokeColor="Orange" StrokeWidth="2"/>
                    <controls:SvgIcon x:Name="alarmSvg" SvgResourceKey="{Binding State, Converter={x:Static converters:AlarmControlPanelStateSvgConvter.Default}}" Style="{StaticResource SvgIconStyle}" />
                    <Frame Style="{StaticResource BadgeFrameStyle}">
                        <Label Text="{Binding State, Converter={x:Static converters:AlarmControlPanelStateText.Default}}" Style="{StaticResource BadgeLabelStyle}"/>
                    </Frame>
                </Grid>
                <Label Grid.Row="1" Text="{Binding FriendlyName}" Style="{StaticResource FriendlyNameLabelStyle}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SensorTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="7*" />
                    <RowDefinition Height="3*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <controls:Circle StrokeColor="Orange" StrokeWidth="2"/>
                    <controls:SvgIcon x:Name="alarmSvg" SvgResourceKey="{Binding State, Converter={x:Static converters:AlarmControlPanelStateSvgConvter.Default}}" Style="{StaticResource SvgIconStyle}" />
                    <Frame Style="{StaticResource BadgeFrameStyle}">
                        <Label Text="{Binding UnitOfMeasurement}" Style="{StaticResource BadgeLabelStyle}" IsVisible="{x:Static converters:IsEmptyConverter}"/>
                    </Frame>
                </Grid>
                <Label Grid.Row="0" Text="{Binding State}" Style="{StaticResource StateLabelStyle}"/>
                <Label Grid.Row="1" Text="{Binding FriendlyName}" Style="{StaticResource FriendlyNameLabelStyle}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="DefaultComponentTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="4*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <controls:Circle StrokeColor="Orange" StrokeWidth="2">
                    </controls:Circle>
                    <Frame BorderColor="Red" CornerRadius="4" MinimumWidthRequest="10" Margin="0,0,0,-5" VerticalOptions="End" HorizontalOptions="CenterAndExpand" BackgroundColor="Red" Padding="4,2,4,3">
                        <Label TextColor="White" Text="{Binding State}" VerticalOptions="Center" HorizontalOptions="Center"  FontSize="8" FontAttributes="Bold" FontFamily="Tahoma"/>
                    </Frame>
                </Grid>
                <Label Grid.Row="0" Text="{Binding State}" HorizontalOptions="Center" VerticalOptions="Center" FontSize="12" FontFamily="Tahoma"/>
                <Label Grid.Row="1" Text="{Binding FriendlyName}" HorizontalOptions="Center" VerticalOptions="Start" FontSize="10" FontFamily="Tahoma" HorizontalTextAlignment="Center"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="ItemContainnerStyle" TargetType="{x:Type controls:ItemContainer}">
            <!--<Setter Property="FlexLayout.Basis" Value="120" />
            <Setter Property="FlexLayout.Grow" Value="10" />
            <Setter Property="FlexLayout.HeightRequest" Value="100" />-->
            <Setter Property="BackgroundColor" Value="AliceBlue" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="IsTabStop" Value="true" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="BorderColor" Value="LightGray" />
            <Setter Property="WidthRequest" Value="400" />
            <Setter Property="HasShadow" Value="False" />
            <Setter Property="Padding" Value="4" />
            <Style.Triggers>
                <Trigger TargetType="controls:ItemContainer" Property="IsSelected" Value="True">
                    <Setter Property="BackgroundColor" Value="Beige" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <controls:ByTypeDataTemplateSelector x:Key="componentTemplateSelector" DefaultTemplate="{StaticResource DefaultComponentTemplate}">
            <controls:TemplateEntry Type="{x:Type components:AlarmControlPanel}" DataTemplate="{StaticResource AlarmControlPanelTemplate}" />
            <controls:TemplateEntry Type="{x:Type components:Sensor}" DataTemplate="{StaticResource SensorTemplate}" />
        </controls:ByTypeDataTemplateSelector>
    </ContentPage.Resources>
    
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Add" Clicked="AddItem_Clicked">
            <ToolbarItem.Icon>
                <OnPlatform x:TypeArguments="FileImageSource">
                    <On Platform="UWP" Value="add.png"/>
                </OnPlatform>
            </ToolbarItem.Icon>
        </ToolbarItem>
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <Grid>
            <StackLayout>
                <StackLayout Orientation="Horizontal">
                    <Picker x:Name="iconsPicker" WidthRequest="200"/>
                    <controls:SvgIcon x:Name="iconCtrl" BackgroundColor="White"/>
                </StackLayout>

                <ScrollView>
                    <controls:ItemsView ItemsSource="{Binding Items}" 
                                        ItemTemplateSelector="{StaticResource componentTemplateSelector}"
                                        ItemContainerStyle="{StaticResource ItemContainnerStyle}">
                        <controls:ItemsView.Layout>
                            <controls:GridWrapLayout ColumnSpacing="2" RowSpacing="4" CellMinHeight="120"  CellMinWidth="120"/>
                        </controls:ItemsView.Layout>
                    </controls:ItemsView>
                </ScrollView>
            </StackLayout>
            <ActivityIndicator x:Name="activityIndicator"
                           IsRunning="{Binding IsBusy}"
                           VerticalOptions="Center" />

        </Grid>
    </ContentPage.Content>
</ContentPage>